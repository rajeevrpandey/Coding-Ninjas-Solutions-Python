Problem statement
Given an unsorted circular doubly linked list, suppose you have reference (or pointer) to its head node only, which of the following operation can be implemented in O(1) time?

i) Insertion at the front of the linked list
ii) Insertion at the end of the linked list
iii) Deletion of the last node of the linked list
iv) Deletion of the front node of the linked list

ANS: All of the mentioned options

===============================================
Problem statement
In doubly linked lists, traversal can be done in ?


ANS: Both directions

===============================================
Problem statement
Given an unsorted doubly Linked List, suppose you have references (or pointer) to its head and tail nodes, which of the following operation can be implemented in O(1) time ?

i) Insertion at the front of the linked list
ii) Insertion at the end of the linked list
iii) Deletion of the last node of the linked list
iv) Deletion of the front node of the linked list


ANS: I, II, III and IV

===============================================
Problem statement
Given an unsorted circular linked list, suppose you have reference (or pointer) to its head node only, which of the following operation can be implemented in O(1) time if no overwriting of nodes data is allowed.

i) Insertion at the front of the linked list
ii) Insertion at the end of the linked list
iii) Deletion of the last node of the linked list
iv) Deletion of the front node of the linked list


ANS: None

===============================================
